[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }
auto-format = true

[[language]]
name = "html"
language-servers = ["vscode-html-language-server", "tailwindcss-ls"]
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = true

[[language]]
name = "css"
language-servers = ["vscode-css-language-server", "tailwindcss-ls"]
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = true

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "tailwindcss-ls", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "tailwindcss-ls", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "jsx"
language-servers = ["typescript-language-server", "tailwindcss-ls", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "tsx"
language-servers = ["typescript-language-server", "tailwindcss-ls", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = true

[language-server.eslint]
args = ["--stdio"]
command = "vscode-eslint-language-server"

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
packageManager = "pnpm"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = {}
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }
